ext {
    getYear = {
        return new Date().format("yyyy")
    }

    describeVersionName = {
        def indicator = getYear()
        def stdout = new ByteArrayOutputStream()

        try {
            exec {
                commandLine "git", "describe", "--all", "--match", "${indicator}.*-*"
                standardOutput = stdout
            }
            String prefix = "/"
            String tag = stdout.toString().trim()
            String result = tag.substring(
                    tag.lastIndexOf(prefix) + prefix.length(),
                    tag.indexOf("-")
            )

            return result
        } catch (e) {
            println e
            println stdout
            println "Couldn't find latest version"
            return "${indicator}.1"
        }
    }

    describeVersionCode = { String version ->
        def parts = version.tokenize(".")

        if (parts.size != 2) {
            throw new IllegalStateException("$version is not eligible for fetching version code from.")
        }

        def mainVersion = Long.parseLong(parts[0]) * 1000 //999 is max range of minVersion
        def minVersion = Long.parseLong(parts[1]) % 1000

        return mainVersion + minVersion
    }
}